<!-- vim:tabstop=4:shiftwidth=4:noexpandtab:textwidth=80 
-->
<!-- Each entry of glossary should be defined within glossary tags by
glossentry tags with id used by xref tag in the general text. 
Example:
	<glossary>
		...
		<glossentry id="identificator">
			<glossterm>Term declaration</glossterm>
			<glossdef>
				Term definition/description (it can contain 
				formated text pictures or arbitrary formatted 
				text.
			</glossdef>
		</glossentry>
		...
	</glossary>
-->


<glossary id="glossary_part">
	<glossentry id="adapter">
		<glossterm>Adapter design pattern</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="composite">
		<glossterm>Composite design pattern</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="content_stream">
		<glossterm>Content stream</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="crossref_table">
		<glossterm>Cross reference table</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="decorator">
		<glossterm>Decorator design patter</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="dictionary">
		<glossterm>Pdf dictionary data type</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="document_catalog">
		<glossterm>Pdf document catalog</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="factory_method">
		<glossterm>Factory method design pattern</glossterm>
		<glossdef>
		<para>
			Factory method is ... TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="facade">
		<glossterm>Facade design pattern</glossterm>
		<glossdef>
		<para>
			Facade is designed pattern ... TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="functor">
		<glossterm>Functor</glossterm>
		<glossdef>
		<para>
			In C++ context, functor is method implementing functional operator.
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="gpl">
		<glossterm>GPL - General public licence</glossterm>
		<glossdef>
		<para>
			General public licence created by Free Software Foundation. The 
			purpose of the GPL is to grant any user the right to copy, modify and 
			redistribute programs and source code from developers that have chosen 
			to license their work under the GPL. See <ulink url="http://en.wikipedia.org/wiki/GPL">GPL wiki</ulink> 
			for more information. TODO link to complete licence
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="incremental_update">
		<glossterm>Incremental update</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="indirect_object">
		<glossterm>Indirect pdf object</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="invariant">
		<glossterm>Invariant</glossterm>
		<glossdef>
		<para>
			Invariant is a condition that is always true at a 
			certain point in a program. In context of automatical 
			testing, invariant defines expectation of behavior 
			compared to real result of operation.
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="iterator">
		<glossterm>Iterator desing pattern</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="linearized_pdf">
		<glossterm>Linearized pdf document</glossterm>
		<glossdef>
		<para>
			Linearized document is specially optimized pdf document for quick
			viewing without need to have whole document at the time when viewing
			starts.
		</para>
		<para>
			All objects related for first page (or fiew pages) are stored in
			first 1024 bytes and TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="observer">
		<glossterm>Observer design patter</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="page_tree">
		<glossterm>Pdf page tree</glossterm>
		<glossdef>
		<para>
			Pdf stores all page dictionaries organized in so called page tree.
			This tree distinguish 2 types of nodes:
			<itemizedlist>
				<listitem>
					Intermediate tree node - this node's purpose is to collect
					other nodes as a subtree. It is represented by <xref linkend="dictionary"/>
					which contains element with <emphasis>Kids</emphasis> name
					and which contains reference to <xref linkend="indirect_object"/>
					of a node (this node can be either intermediate or page node.
					Intermediate tree node dictionary contains element with 
					<emphasis>Type</emphasis> name and this has to have
					<emphasis>Pages</emphasis> value. To enable travirsing in
					the tree, also <emphasis>Count</emphasis> element is
					required for node's dictionary. This element holds number of
					page tree nodes in current intermediate node.
				</listitem>
				<listitem>
					Page (leaf) tree node - this node contains direct page
					information. It is represented by page dictionary which has
					element with <emphasis>Type</emphasis> name and
					<emphasis>Page</emphasis> value.
				</listitem>
			</itemizedlist>
			Root of the tree is referenced by <xref linkend="document_catalog"/>
			dictionary as <emphasis>Pages</emphasis> element reference. 
		</para>
		<para>
			With well balanced tree, it is possible to access arbitrary page
			(also for very big amount of pages) in very short time (just fiew
			hops through intermediate nodes). Pdf creators usually collects
			pages in chunks in one intermediate node. Also intermediate nodes
			are collected by 10. This means that document with 1000 pages has
			page tree with 3 intermediate nodes.
			<note>
				Page tree root is allways intermediate node.
			</note>
		</para>
		<mediaobject>
		  <imageobject align="center">
			  <imagedata fileref="images/page_tree.png" format="PNG"/>
		  </imageobject>
		  <caption><para>Page tree</para></caption>
		</mediaobject>
		</glossdef>
	</glossentry> 
	<glossentry id="stream">
		<glossterm>pdf stream</glossterm>
		<glossdef>
		<para>
			todo
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="trailer">
		<glossterm>pdf trailer</glossterm>
		<glossdef>
		<para>
			todo
		</para>
		</glossdef>
	</glossentry> 
	<glossentry id="wrapper">
		<glossterm>Wrapper design patter</glossterm>
		<glossdef>
		<para>
			TODO
		</para>
		</glossdef>
	</glossentry> 
</glossary>

